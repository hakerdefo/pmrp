#!/usr/bin/env bash
########
readonly RED='\E[1;32;41m'
readonly BLUE='\E[1;32;44m'
readonly NC='\E[0m'
command -v mpg123 >/dev/null 2>&1 || { printf "\033c"; echo -e "$RED PMRP requires 'mpg123' but it's not installed! Install 'mpg123' to enjoy PMRP. $NC" >&2; exit 1; }
readonly PLAYER="mpg123 --control --utf8 --title --preload 1 --buffer 768"
readonly RAW_GENRES=$(tail -n +2 genres.csv)
readonly RAW_STATIONS=$(tail -n +2 stations.csv)
# Genres labels indexed by their id
declare -a GENRES
# Stations info indexed by their display order
declare -A STATIONS
########
function ShowGenresErrorScreen (){
	printf "\033c"
	echo ""
	echo -e "$RED $1 $NC $BLUE is an invalid selection! $NC"
	echo ""
	echo -e "Please select a category by entering the relevant number."
	echo -e "For example enter '2' to select station category 'Blues'."
	echo -e "To select station category 'News & Views' enter '11'."
	echo -e "And you can select station category 'Rock' by entering '14'."
	echo -e "Easy, Ain't it? Let's go back to the Menu, Shall we?"
	echo ""
	read -rsp $'Press any key to return to PMRP Main Menu...\n' -n1 key
	Muzic
}
########
function ShowStationsErrorScreen () {
	printf "\033c"
	echo ""
	echo -e "$RED $1 $NC $BLUE is an invalid selection! $NC"
	echo ""
}
########
function ShowCategoryStations (){
	local -r selectedGenreId=$1
	# local -i selectedStationId=-1
	local -i iterator=1
	local inputMatchesStation=false

	printf "\033c"
    echo -e "Stations Playing $BLUE ${GENRES[$selectedGenreId]} Blues Music $NC :"
    echo ""

	while IFS=, read -r idcol labelcol URLcol genreIdcol; do
		if [[ $genreIdcol == "$selectedGenreId" ]] ; then

			# Print string with proper colors and zero-padding
			printf "%b %02d %b %s \n"  "$BLUE" "$iterator" "$NC" "$labelcol"

			# Use STATIONS as a multidimensionnal array
			STATIONS[$iterator,0]=$labelcol
			STATIONS[$iterator,1]=$URLcol

			((iterator++))
		fi
	done <<< "$RAW_STATIONS"

	echo -e "$RED $iterator $BLUE Return to Main Menu $NC"
    echo ""
	echo -e "Select a $BLUE station $NC between 1 and $(("$iterator"-1)) and hit $BLUE [Enter] $NC to $BLUE PLAY $NC :"

	read -er selectedStationId

    # If input is a number
	if [[ $selectedStationId =~ ^[0-9]+$ ]] ; then
		# Trim leading zeroes
		((selectedStationId+=0))

		# Check is input seems to match the id of a station
		for key in "${!STATIONS[@]}"; do

			if [[ "$selectedStationId,0" == "$key" ]] ; then
				inputMatchesStation=true
				break 1
			fi
		done

		if [[ $inputMatchesStation == true ]] ; then
			printf "\033c"
			echo -e "$BLUE PMRP $NC -> $BLUE ${GENRES[$selectedGenreId]} $NC -> $BLUE ${STATIONS[$selectedStationId,0]} $NC:"
			echo ""
			echo -e "Press $BLUE [Space] $NC to pause : Press $BLUE [Q] $NC to stop"
			echo ""
			echo ""
			echo -e "$BLUE Playlist $NC:"
			echo ""

			$PLAYER "${STATIONS[$selectedStationId,1]}" 2>&1 /dev/null | grep --line-buffered "StreamTitle" | sed -e 's/;.*//' -e 's/.*=//' -e "s/'//g"

			ShowCategoryStations "$selectedGenreId"

		# Input matches exit option
		elif [[ $selectedStationId -eq $iterator ]]; then
			printf "\033c"
	    	Muzic
		else
			ShowStationsErrorScreen "$selectedStationId"
			sleep 3
			ShowCategoryStations "$selectedGenreId"
		fi

	else
		ShowStationsErrorScreen "$selectedStationId"
	fi
}
########
function Muzic (){
	local -i iterator=1
	local inputMatchesGenre=false

    printf "\033c"
    echo -e "$BLUE PMRP $NC - Poor Man's Radio Player"
    echo ""
    echo -e "Station $BLUE Categories $NC :"
    echo ""

	while IFS=, read -r idcol labelcol; do

		# Print string with proper colors and zero-padding
		printf "%b %02d %b %s \n" "$BLUE" "$iterator" "$NC" "$labelcol"

		GENRES[$idcol]=$labelcol

		((iterator++))

	done <<< "$RAW_GENRES"

    echo -e "$RED $iterator $BLUE Quit PMRP $NC"
    echo ""
    echo -e "Select a $BLUE Category $NC and press $BLUE [Enter] $NC to $BLUE list available stations $NC :"
    read -er selectedGenreId

	# If input is a number
	if [[ $selectedGenreId =~ ^[0-9]+$ ]] ; then
		# Trim leading zeroes
		((inputgenre+=0))

		# Check is input seems to match the id of a category
		for key in "${!GENRES[@]}"; do
			if [[ $selectedGenreId -eq $key ]] ; then
				inputMatchesGenre=true
				break 1
			fi
		done

		if [[ $inputMatchesGenre == true ]] ; then

			ShowCategoryStations "$selectedGenreId"

		# Input matches exit option
		elif [[ $selectedGenreId -eq $iterator ]]; then
			printf "\033c"
			echo ""
			echo -e "$BLUE 'When I die, just keep playing the records' $RED Jimi Hendrix $NC"
			echo ""
			sleep 2
			printf "\033c"
			exit 0

		else
			ShowGenresErrorScreen "$selectedGenreId"
		fi
	else
		ShowGenresErrorScreen "$selectedGenreId"
	fi
}
while :
do
    Muzic
done
